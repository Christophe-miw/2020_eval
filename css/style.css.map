{"version":3,"sources":["style.css","style.scss","_mixins.scss"],"names":[],"mappings":"AAAA,gBAAgB;ACGhB,uBAAA;AACA;EACI,uBAAsB;ADD1B;;ACGA;EACI,kBAAkB;EAClB,8CAA8C;EAC9C,sBAAsB;EACtB,2BAA2B;EAC3B,aAAa;ADAjB;;ACEA;EACI,aAAA;EACA,kBAAkB;EAClB,SAAQ;EACR,WAAW;EACX,gCAAwB;UAAxB,wBAAwB;EACxB,cAAA;EACA,YAAY;EACZ,YAAY;EACZ,UAAA;EACA,mBAAkB;EAClB,yBAAyB;EACzB,YAAY;ADChB;;ACbA;EAeQ,gBAAgB;ADExB;;ACjBA;EAkBQ,kBAAkB;EAClB,gBACJ;ADEJ;;ACCA,2BAAA;ACtBQ;EDwBJ;IACI,qBAAoB;EDE1B;AACF;;ACAA,2BAAA;AC5BQ;ED8BJ;IACI,sBAAqB;EDG3B;AACF","file":"style.css","sourcesContent":["@charset \"UTF-8\";\n/* S -> Jusqu'à 480px */\nbody {\n  background-color: green;\n}\n\nheader {\n  position: relative;\n  background-image: url(\"../img/background.jpg\");\n  background-size: cover;\n  background-position: center;\n  height: 500px;\n}\n\n.promotion {\n  /* Position */\n  position: absolute;\n  top: 55px;\n  right: 25px;\n  transform: rotate(20deg);\n  /* Dimension */\n  width: 210px;\n  padding: 8px;\n  /* Style */\n  border-radius: 10px;\n  background-color: #7F0524;\n  color: white;\n}\n\n.promotion span:nth-child(1) {\n  font-size: 1.2em;\n}\n\n.promotion span:nth-child(2) {\n  font-style: italic;\n  font-size: 0.8em;\n}\n\n/* M -> A partir de 480px */\n@media (min-width: 480px) {\n  body {\n    background-color: red;\n  }\n}\n\n/* M -> A partir de 700px */\n@media (min-width: 768px) {\n  body {\n    background-color: blue;\n  }\n}\n","@import \"mixins\";\n\n\n/* S -> Jusqu'à 480px */\nbody{\n    background-color:green;\n}\nheader{\n    position: relative;\n    background-image: url('../img/background.jpg');\n    background-size: cover;\n    background-position: center;\n    height: 500px;\n}\n.promotion{\n    /* Position */\n    position: absolute;\n    top:55px;\n    right: 25px;\n    transform: rotate(20deg);\n    /* Dimension */\n    width: 210px;\n    padding: 8px;\n    /* Style */\n    border-radius:10px;\n    background-color: #7F0524;\n    color: white;\n    \n    span:nth-child(1){    \n        font-size: 1.2em;\n    }  \n    span:nth-child(2){\n        font-style: italic;\n        font-size:0.8em\n    }\n   \n}\n/* M -> A partir de 480px */\n@include respond-to('M'){\n    body{\n        background-color:red;\n    }\n}\n/* M -> A partir de 700px */\n@include respond-to('L'){\n    body{\n        background-color:blue;\n    }\n}\n","//Définition des breakpoints via une MAP\n$breakpoints: (\n    \"M\": \"480px\",\n    \"L\": \"768px\",\n    \"XL\": \"1200px\",\n);\n\n//Mixin qui permet d'utiliser facilement les mediaQueries\n@mixin respond-to($breakpoint) {\n    // Recuperer la valeur depuis la clé\n    $value: map-get($breakpoints, $breakpoint);\n\n    //Si la clé existe dans la MAP\n    @if $value != null {\n        //Retourner le media queries avec la valeur correspondant à la clé\n        @media (min-width: $value) {\n            @content;\n        }\n    }\n\n    //Si le media n'existe pas dans la map\n    @else {\n        @warn \"Problème `#{$breakpoint}`. \"\n            + \"Vérifier que  `$breakpoints` est définit dans la map.\";\n    }\n}"]}